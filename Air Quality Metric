{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Introduction: My metric in order to determine what the best neighboorhood in Pittsburgh is the air quaultiy around the area. The database that is used in this code is the daily air quality data in Allegheny County. \n",
    "\n",
    "The reason I was drawn to this metric is beacuse I used to suffer from asthma, the air quailty is a very imporatant factor of living when it comes to children and older adults who also have to prioritize their health. \n",
    "\n",
    "I explored schools districts and police presecene for neighboorhoods as other possible metrics, but I didn't think it properly filled out the requirment I was looking for. So when I found this database I jumped at the oppertunity and was settled with my decision.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Import Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# load pandas and numpy\n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/tljh/user/lib/python3.8/site-packages/IPython/core/interactiveshell.py:3071: DtypeWarning: Columns (4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72) have mixed types.Specify dtype option on import or set low_memory=False.\n",
      "  has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>site</th>\n",
       "      <th>datetime</th>\n",
       "      <th>stat</th>\n",
       "      <th>bcstat</th>\n",
       "      <th>bcstat_txt</th>\n",
       "      <th>black_carbon</th>\n",
       "      <th>black_carbon_txt</th>\n",
       "      <th>bp_txt</th>\n",
       "      <th>co</th>\n",
       "      <th>co_txt</th>\n",
       "      <th>...</th>\n",
       "      <th>sonicws</th>\n",
       "      <th>sonicws_txt</th>\n",
       "      <th>uvpm</th>\n",
       "      <th>uvpm_txt</th>\n",
       "      <th>rainfall</th>\n",
       "      <th>rainfall_txt</th>\n",
       "      <th>solarrad</th>\n",
       "      <th>solarrad_txt</th>\n",
       "      <th>uv_rad</th>\n",
       "      <th>uv_rad_txt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-30T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Min</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Max</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Lawrenceville 2</td>\n",
       "      <td>2016-02-16T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Hr. of Max</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Avg</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>2.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-16T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-16T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 72 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                site             datetime        stat  bcstat bcstat_txt  \\\n",
       "bp                                                                         \n",
       "NaN           Avalon  2016-01-15T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00       Total     NaN        NaN   \n",
       "NaN           Avalon  2016-01-30T00:00:00       Total     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Min     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Max     NaN        NaN   \n",
       "NaN  Lawrenceville 2  2016-02-16T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00  Hr. of Max     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Avg     NaN        NaN   \n",
       "NaN           Avalon  2016-01-16T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-16T00:00:00       Total     NaN        NaN   \n",
       "\n",
       "     black_carbon black_carbon_txt bp_txt    co co_txt  ...  sonicws  \\\n",
       "bp                                                      ...            \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     24.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      1.5   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      6.5   \n",
       "NaN           NaN              NaN    NaN  22.0    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     20.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      2.8   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     24.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "\n",
       "    sonicws_txt  uvpm uvpm_txt  rainfall rainfall_txt  solarrad solarrad_txt  \\\n",
       "bp                                                                             \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "\n",
       "     uv_rad uv_rad_txt  \n",
       "bp                      \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "\n",
       "[10 rows x 72 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "air_quality_pandas = pd.read_csv(\"air_quality.csv\", index_col=\"bp\")\n",
    "\n",
    "# looking at the first ten rows of data \n",
    "air_quality_pandas.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>site</th>\n",
       "      <th>datetime</th>\n",
       "      <th>stat</th>\n",
       "      <th>bcstat</th>\n",
       "      <th>bcstat_txt</th>\n",
       "      <th>black_carbon</th>\n",
       "      <th>black_carbon_txt</th>\n",
       "      <th>bp_txt</th>\n",
       "      <th>co</th>\n",
       "      <th>co_txt</th>\n",
       "      <th>...</th>\n",
       "      <th>sonicws</th>\n",
       "      <th>sonicws_txt</th>\n",
       "      <th>uvpm</th>\n",
       "      <th>uvpm_txt</th>\n",
       "      <th>rainfall</th>\n",
       "      <th>rainfall_txt</th>\n",
       "      <th>solarrad</th>\n",
       "      <th>solarrad_txt</th>\n",
       "      <th>uv_rad</th>\n",
       "      <th>uv_rad_txt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bp</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-30T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Min</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Max</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>6.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Lawrenceville 2</td>\n",
       "      <td>2016-02-16T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>22.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Hr. of Max</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>20.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-15T00:00:00</td>\n",
       "      <td>Avg</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>2.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-16T00:00:00</td>\n",
       "      <td>Count</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>24.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NaN</th>\n",
       "      <td>Avalon</td>\n",
       "      <td>2016-01-16T00:00:00</td>\n",
       "      <td>Total</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 72 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                site             datetime        stat  bcstat bcstat_txt  \\\n",
       "bp                                                                         \n",
       "NaN           Avalon  2016-01-15T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00       Total     NaN        NaN   \n",
       "NaN           Avalon  2016-01-30T00:00:00       Total     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Min     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Max     NaN        NaN   \n",
       "NaN  Lawrenceville 2  2016-02-16T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00  Hr. of Max     NaN        NaN   \n",
       "NaN           Avalon  2016-01-15T00:00:00         Avg     NaN        NaN   \n",
       "NaN           Avalon  2016-01-16T00:00:00       Count     NaN        NaN   \n",
       "NaN           Avalon  2016-01-16T00:00:00       Total     NaN        NaN   \n",
       "\n",
       "     black_carbon black_carbon_txt bp_txt    co co_txt  ...  sonicws  \\\n",
       "bp                                                      ...            \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     24.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      1.5   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      6.5   \n",
       "NaN           NaN              NaN    NaN  22.0    NaN  ...      NaN   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     20.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      2.8   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...     24.0   \n",
       "NaN           NaN              NaN    NaN   NaN    NaN  ...      NaN   \n",
       "\n",
       "    sonicws_txt  uvpm uvpm_txt  rainfall rainfall_txt  solarrad solarrad_txt  \\\n",
       "bp                                                                             \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "NaN         NaN   NaN      NaN       NaN          NaN       NaN          NaN   \n",
       "\n",
       "     uv_rad uv_rad_txt  \n",
       "bp                      \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "NaN     NaN        NaN  \n",
       "\n",
       "[10 rows x 72 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# We have a lot of blank lines, missing data, and diffrenet data-types; let's clean this up\n",
    "\n",
    "air_quality_pandas.dropna()  # clears rows with NaN values\n",
    "\n",
    "# looking at editied first ten rows of the data\n",
    "air_quality_pandas.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Liberty 2                   10699\n",
      "Flag Plaza                  10699\n",
      "Liberty                     10699\n",
      "Parkway East                10699\n",
      "Harrison Township           10699\n",
      "Lawrenceville 2             10699\n",
      "North Braddock              10699\n",
      "South Fayette               10699\n",
      "Avalon                      10699\n",
      "Glassport High Street       10699\n",
      "Lawrenceville               10699\n",
      "Lincoln                     10699\n",
      "West Mifflin                 8694\n",
      "Clairton                     8694\n",
      "Parkway East (Near Road)     2478\n",
      "Name: site, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#Rearrange the data to count the frequency of primary care in each neighborhood.\n",
    "count = air_quality_pandas['site'].value_counts() \n",
    "print(count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f41b91541c0>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set size of plots\n",
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams['figure.figsize']\n",
    "\n",
    "# plot the bar graph\n",
    "count.plot.bar()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In my metric, the lower the number the better. Most of the neighboorhoods have pretty similar results. The only one that really stands out is the best neighboorhood, Parkway East. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# let's take a look at a pie chart\n",
    "\n",
    "pie_chart = count.plot.pie()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again we can see that most of the neighboorhoods have the same air quality, yet Parkway Easy(Near Road) stands out again. \n",
    "\n",
    "Although there is no way to determine the true \"best\" neighboorhood, the best neighboorhood under the metric of air quality is Parkway East(Near Road). \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
